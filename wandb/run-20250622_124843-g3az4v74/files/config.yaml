__doc__:
    value: "Config object.\n\n    Config objects are intended to hold all of the hyperparameters associated\n    with a wandb run and are saved with the run object when `wandb.init` is\n    called.\n\n    We recommend setting the config once when initializing your run by passing\n    the `config` parameter to `init`:\n\n    ```\n    wandb.init(config=my_config_dict)\n    ```\n\n    You can create a file called `config-defaults.yaml`, and it will\n    automatically be loaded as each run's config. You can also pass the name\n    of the file as the `config` parameter to `init`:\n\n    ```\n    wandb.init(config=\"my_config.yaml\")\n    ```\n\n    See https://docs.wandb.com/guides/track/config#file-based-configs.\n\n    Examples:\n        Basic usage\n        ```\n        with wandb.init(config={\"epochs\": 4}) as run:\n            for x in range(run.config.epochs):\n                # train\n        ```\n\n        Nested values\n        ```\n        with wandb.init(config={\"train\": {\"epochs\": 4}}) as run:\n            for x in range(run.config[\"train\"][\"epochs\"]):\n                # train\n        ```\n\n        Using absl flags\n        ```\n        flags.DEFINE_string(\"model\", None, \"model to run\")  # name, default, help\n        with wandb.init() as run:\n            run.config.update(flags.FLAGS)  # adds all absl flags to config\n        ```\n\n        Argparse flags\n        ```python\n        with wandb.init(config={\"epochs\": 4}) as run:\n            parser = argparse.ArgumentParser()\n            parser.add_argument(\n                \"-b\",\n                \"--batch-size\",\n                type=int,\n                default=8,\n                metavar=\"N\",\n                help=\"input batch size for training (default: 8)\",\n            )\n            args = parser.parse_args()\n            run.config.update(args)\n        ```\n\n        Using TensorFlow flags (deprecated in tensorflow v2)\n        ```python\n        flags = tf.app.flags\n        flags.DEFINE_string(\"data_dir\", \"/tmp/data\")\n        flags.DEFINE_integer(\"batch_size\", 128, \"Batch size.\")\n\n        with wandb.init() as run:\n            run.config.update(flags.FLAGS)\n        ```\n    "
_name:
    value: wandb.config
_wandb:
    value:
        cli_version: 0.20.1
        m: []
        python_version: 3.10.0
        t:
            "1":
                - 1
                - 5
                - 11
                - 49
                - 51
                - 53
                - 71
                - 84
                - 98
            "2":
                - 1
                - 5
                - 11
                - 49
                - 51
                - 53
                - 71
                - 84
                - 98
            "3":
                - 16
                - 55
            "4": 3.10.0
            "5": 0.20.1
            "6": 4.52.4
            "8":
                - 3
            "12": 0.20.1
            "13": windows-amd64
