2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_setup.py:_flush():81] Current SDK version is 0.20.1
2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_setup.py:_flush():81] Configure stats pid to 13324
2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_setup.py:_flush():81] Loading settings from C:\Users\bilal\.config\wandb\settings
2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_setup.py:_flush():81] Loading settings from C:\Users\bilal\Documents\VLM_Medical\wandb\settings
2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_setup.py:_flush():81] Loading settings from environment variables
2025-06-22 12:48:43,128 INFO    MainThread:13324 [wandb_init.py:setup_run_log_directory():703] Logging user logs to C:\Users\bilal\Documents\VLM_Medical\wandb\run-20250622_124843-g3az4v74\logs\debug.log
2025-06-22 12:48:43,129 INFO    MainThread:13324 [wandb_init.py:setup_run_log_directory():704] Logging internal logs to C:\Users\bilal\Documents\VLM_Medical\wandb\run-20250622_124843-g3az4v74\logs\debug-internal.log
2025-06-22 12:48:43,129 INFO    MainThread:13324 [wandb_init.py:init():831] calling init triggers
2025-06-22 12:48:43,129 INFO    MainThread:13324 [wandb_init.py:init():836] wandb.init called with sweep_config: {}
config: {'_name': 'wandb.config', '__doc__': 'Config object.\n\n    Config objects are intended to hold all of the hyperparameters associated\n    with a wandb run and are saved with the run object when `wandb.init` is\n    called.\n\n    We recommend setting the config once when initializing your run by passing\n    the `config` parameter to `init`:\n\n    ```\n    wandb.init(config=my_config_dict)\n    ```\n\n    You can create a file called `config-defaults.yaml`, and it will\n    automatically be loaded as each run\'s config. You can also pass the name\n    of the file as the `config` parameter to `init`:\n\n    ```\n    wandb.init(config="my_config.yaml")\n    ```\n\n    See https://docs.wandb.com/guides/track/config#file-based-configs.\n\n    Examples:\n        Basic usage\n        ```\n        with wandb.init(config={"epochs": 4}) as run:\n            for x in range(run.config.epochs):\n                # train\n        ```\n\n        Nested values\n        ```\n        with wandb.init(config={"train": {"epochs": 4}}) as run:\n            for x in range(run.config["train"]["epochs"]):\n                # train\n        ```\n\n        Using absl flags\n        ```\n        flags.DEFINE_string("model", None, "model to run")  # name, default, help\n        with wandb.init() as run:\n            run.config.update(flags.FLAGS)  # adds all absl flags to config\n        ```\n\n        Argparse flags\n        ```python\n        with wandb.init(config={"epochs": 4}) as run:\n            parser = argparse.ArgumentParser()\n            parser.add_argument(\n                "-b",\n                "--batch-size",\n                type=int,\n                default=8,\n                metavar="N",\n                help="input batch size for training (default: 8)",\n            )\n            args = parser.parse_args()\n            run.config.update(args)\n        ```\n\n        Using TensorFlow flags (deprecated in tensorflow v2)\n        ```python\n        flags = tf.app.flags\n        flags.DEFINE_string("data_dir", "/tmp/data")\n        flags.DEFINE_integer("batch_size", 128, "Batch size.")\n\n        with wandb.init() as run:\n            run.config.update(flags.FLAGS)\n        ```\n    ', '_wandb': {}}
2025-06-22 12:48:43,129 INFO    MainThread:13324 [wandb_init.py:init():872] starting backend
2025-06-22 12:48:43,399 INFO    MainThread:13324 [wandb_init.py:init():875] sending inform_init request
2025-06-22 12:48:43,409 INFO    MainThread:13324 [wandb_init.py:init():883] backend started and connected
2025-06-22 12:48:43,411 INFO    MainThread:13324 [wandb_init.py:init():956] updated telemetry
2025-06-22 12:48:43,453 INFO    MainThread:13324 [wandb_init.py:init():980] communicating run to backend with 90.0 second timeout
2025-06-22 12:48:43,993 INFO    MainThread:13324 [wandb_init.py:init():1032] starting run threads in backend
2025-06-22 12:48:44,624 INFO    MainThread:13324 [wandb_run.py:_console_start():2453] atexit reg
2025-06-22 12:48:44,624 INFO    MainThread:13324 [wandb_run.py:_redirect():2301] redirect: wrap_raw
2025-06-22 12:48:44,624 INFO    MainThread:13324 [wandb_run.py:_redirect():2370] Wrapping output streams.
2025-06-22 12:48:44,624 INFO    MainThread:13324 [wandb_run.py:_redirect():2393] Redirects installed.
2025-06-22 12:48:44,626 INFO    MainThread:13324 [wandb_init.py:init():1078] run started, returning control to user process
2025-06-22 12:48:44,814 INFO    MsgRouterThr:13324 [mailbox.py:close():129] [no run ID] Closing mailbox, abandoning 1 handles.
